name: Manually build latest image tag

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Docker Build'
        required: true
        default: 'Build Docker image'

jobs:
  build:
    runs-on: ubuntu-latest
    if: GitHub.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        if: ${{ github.event_name != 'pull_request' }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: mschirrmeister/tailscale-k8s
          tags: |
            type=raw,value=latest,enable=${{ endsWith(GitHub.ref, 'main') }}
          flavor: |
            latest=false

      - name: Check output meta
        env:
          RELEASE_VERSION: ${{ steps.meta.outputs.tags }}
        run: |
          echo $RELEASE_VERSION
          echo ${{ steps.meta.outputs.tags }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }} 

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64,linux/arm64,linux/arm
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
